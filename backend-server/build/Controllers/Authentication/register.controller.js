"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(a,b,c,d){d===void 0&&(d=c),Object.defineProperty(a,d,{enumerable:!0,get:function(){return b[c]}})}:function(a,b,c,d){d===void 0&&(d=c),a[d]=b[c]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(a,b){Object.defineProperty(a,"default",{enumerable:!0,value:b})}:function(a,b){a["default"]=b}),__importStar=this&&this.__importStar||function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)"default"!=c&&Object.prototype.hasOwnProperty.call(a,c)&&__createBinding(b,a,c);return __setModuleDefault(b,a),b};Object.defineProperty(exports,"__esModule",{value:!0});const express_1=require("express"),registerController=(0,express_1.Router)(),registerService=__importStar(require("../../Services/Authentication/register.service")),ControllerUtility=__importStar(require("../../Utilities/Controllers/Authentication/authController.utility")),ResponseEnums_1=require("../../Utilities/Enums/ResponseEnums");let asyncDelay=async a=>new Promise(b=>{setTimeout(()=>b(),a)});registerController.get("/register",async(a,b)=>{let c=await registerService.defaultRegisterService();await asyncDelay(2e3),b.send(c)}),registerController.post("/register",async(a,b)=>{let c=a.body;// check if valid data parameters was passed to the /register POST request
if(!ControllerUtility.isRequestParamsValid(c,["firstName","lastName","emailId","password"]))return void b.status(400).send(JSON.stringify(ResponseEnums_1.ResponseEnums.REQUEST_FAIL_INVALID_PARAMETERS));try{let a=await registerService.newUserRegistration(c);await asyncDelay(1650);-1===a?b.send(JSON.stringify(ResponseEnums_1.ResponseEnums.REGISTER_FAIL_EMAIL_ID_TAKEN)):0===a?b.send(JSON.stringify(ResponseEnums_1.ResponseEnums.REGISTER_FAIL_INVALID_EMAIL_ID)):1===a?b.send(JSON.stringify(ResponseEnums_1.ResponseEnums.REGISETER_SUCCESS)):b.send(JSON.stringify({blank:"blank"}))}catch(a){b.status(500).send(JSON.stringify(Object.assign(Object.assign({},ResponseEnums_1.ResponseEnums.REGISTER_FAIL_OTHER),{err:a})))}}),exports.default=registerController;